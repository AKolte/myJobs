{"version":3,"sources":["Containers/LandingPage/styles.module.css","Containers/Login/styles.module.css","Containers/Signup/styles.module.css","Containers/RecruiterFlow/Dashboard/styles.module.css","Containers/ForgotPassword/styles.module.css","Containers/ResetPassword/styles.module.css","Components/Jobpost/styles.module.css","Containers/RecruiterFlow/CreateJobpost/styles.module.css","Containers/Home/styles.module.css","Containers/LandingPage/assets/interview.png","Containers/LandingPage/index.js","Components/Navbar/index.js","apis.js","Containers/Login/index.js","Containers/Signup/assets/recruiter.svg","Containers/Signup/index.js","Containers/ForgotPassword/index.js","Containers/ResetPassword/index.js","Components/Jobpost/index.js","Containers/RecruiterFlow/Dashboard/assets/blank.svg","Containers/RecruiterFlow/Dashboard/index.js","Containers/RecruiterFlow/CreateJobpost/index.js","Containers/Home/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Home","className","styles","headerContent","style","fontSize","whiteText","primaryColor","to","Button","Image","src","interview","interviewImage","fluid","myJobs","NavBar","props","showLogin","Navbar","Container","Brand","Toggle","Collapse","Text","baseUrl","apis","login","register","getResetPasswordToken","VerifyPasswordToken","changePassword","createJobpost","fetchAllPostedJobs","getSingleJobDetails","deleteJobpost","Login","history","useHistory","useState","authMessage","setAuthMessage","email","setEmail","emailValidation","setEmailValidation","emailRef","useRef","password","setPassword","passwordValidation","setPasswordValidation","passRef","centerCard","loginCard","paddingBottom","Form","Group","Label","Control","isInvalid","ref","value","onChange","e","target","maxWidth","minWidth","type","placeholder","Feedback","controlId","variant","length","console","log","loginAndJoin","onClick","emailRegex","test","data","fetch","method","headers","body","JSON","stringify","then","response","json","code","document","cookie","name","id","token","userRole","push","message","catch","error","current","justifyContent","paddingTop","Signup","setName","isValidName","setValidName","nameRef","isValidPassword","setValidPassword","confirmPassword","setConfirmPassword","confirmPassRef","skills","setSkills","skillsRef","errorResponse","setErrorResponse","renderPasswordInput","signupCard","recruiter","height","color","disabled","candidateSignup","display","marginLeft","signupAndLogin","errorMessage","errors","forEach","eachError","ForgotPassword","class","forgotPassCard","submitButton","validateEmail","padding","ResetPassword","search","useLocation","isValidConfirmPassword","query","URLSearchParams","get","resetToken","resetCard","Jobpost","jobDescription","setViewApplications","title","description","locationAndApplicants","location","blueBg","Dashboard","jobModalId","setJobModalId","setViewApplcations","postedJobs","setPostedJobs","cookieObject","useEffect","fetchJobsFromRecruiter","renderBreadcrumb","Breadcrumb","Item","recruiterDashboard","jobCards","map","jobpost","jobId","noJobsPosted","maxHeight","blank","CreateJobpost","setTitle","isValidTitle","titleRef","setDescription","isValidDescription","descriptionRef","setLocation","isValidLocation","locationRef","validateFields","postJob","jobpostCard","as","minHeight","splitBg","path","exact","component","LandingPage","RecruiterDashboard","cookArray","split","cookObj","temp","eachPair","trim","getCookieObject","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d134e24d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"interviewImage\":\"styles_interviewImage__31vGn\",\"whiteText\":\"styles_whiteText__TfO59\",\"primaryColor\":\"styles_primaryColor__1i5hF\",\"backgroundBottom\":\"styles_backgroundBottom__1K2rF\",\"headerContent\":\"styles_headerContent__3HcP8\",\"headerBar\":\"styles_headerBar__2ES2e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"splitBg\":\"styles_splitBg__23U2U\",\"password\":\"styles_password__3XEYv\",\"loginAndJoin\":\"styles_loginAndJoin__3xqKr\",\"centerCard\":\"styles_centerCard__2WFoO\",\"loginCard\":\"styles_loginCard__3gWLj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signupCard\":\"styles_signupCard__3LsGP\",\"centerCard\":\"styles_centerCard__1-6VK\",\"signupAndLogin\":\"styles_signupAndLogin__2lDRR\",\"candidateSignup\":\"styles_candidateSignup__2Uazj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recruiterDashboard\":\"styles_recruiterDashboard__3WONi\",\"jobCards\":\"styles_jobCards__JwCj8\",\"noJobsPosted\":\"styles_noJobsPosted__2-JgA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgotPassCard\":\"styles_forgotPassCard__3QEfl\",\"centerCard\":\"styles_centerCard__3Lj7o\",\"submitButton\":\"styles_submitButton__2_xhv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resetCard\":\"styles_resetCard__12ILS\",\"centerCard\":\"styles_centerCard__3eatY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"jobpost\":\"styles_jobpost__3-C-M\",\"locationAndApplicants\":\"styles_locationAndApplicants__3qr5x\",\"blueBg\":\"styles_blueBg__32fZW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"jobpostCard\":\"styles_jobpostCard__2nNFj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"splitBg\":\"styles_splitBg__Kp4j-\"};","export default __webpack_public_path__ + \"static/media/interview.9e437405.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './styles.module.css';\r\nimport { Button, Image } from 'react-bootstrap';\r\nimport interview from './assets/interview.png';\r\n\r\nconst myJobs = () => {\r\n    return (\r\n        <div>\r\n            <span className={styles.whiteText}>My</span>\r\n            <span className={styles.primaryColor}>Jobs</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst headerContent = () => {\r\n    return (\r\n        <div className={styles.headerContent} >\r\n            <div style={{ fontSize: '60px' }} className={`${styles.whiteText}`}>\r\n                Welcome to {myJobs()}\r\n                <Link to='/signup'><Button>Get Started</Button></Link>\r\n            </div>\r\n            <div>\r\n                <Image src={interview} className={styles.interviewImage} fluid />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Home = () => {\r\n    return ( \r\n        <header>\r\n            <div>\r\n                {headerContent()}\r\n            </div>\r\n        </header>\r\n     );\r\n}\r\n \r\nexport default Home;","import { Navbar, Container, Button } from \"react-bootstrap\";\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport styles from './styles.module.css';\r\n\r\nconst myJobs = () => {\r\n    return (\r\n        <div>\r\n            <span className=\"whiteText\">My</span>\r\n            <span className=\"primaryColor\">Jobs</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst NavBar = (props = {showLogin: true}) => {\r\n    \r\n    return ( \r\n        <Navbar>\r\n            <Container>\r\n                <Navbar.Brand><Link to='/'>{myJobs()}</Link></Navbar.Brand>\r\n                <Navbar.Toggle />\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                <Navbar.Text>\r\n                   {props.showLogin ? <Link to='/login'><Button>Login/Signup</Button></Link> : null}\r\n                </Navbar.Text>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n \r\nexport default NavBar;","export const baseUrl = 'https://jobs-api.squareboat.info/api/v1';\r\nexport const apis = {\r\n    baseUrl: 'https://jobs-api.squareboat.info/api/v1',\r\n\r\n    login: `${baseUrl}/auth/login`,\r\n    register: `${baseUrl}/auth/register`,\r\n    getResetPasswordToken: `${baseUrl}}/auth/resetpassword/`,\r\n    VerifyPasswordToken: `${baseUrl}}/auth/resetpassword/`,\r\n    changePassword: `${baseUrl}}/auth/resetpassword/`,\r\n\r\n    createJobpost: `${baseUrl}/jobs`,\r\n    fetchAllPostedJobs: `${baseUrl}/recruiters/jobs`,\r\n    getSingleJobDetails: `${baseUrl}/jobs`,\r\n    deleteJobpost: `${baseUrl}/jobs`,\r\n}\r\n\r\nexport default apis;","import { useEffect, useRef, useState } from 'react';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\nimport NavBar from '../../Components/Navbar';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport apis from '../../apis';\r\nimport styles from './styles.module.css';\r\n\r\nconst Login = () => {\r\n    const history = useHistory();\r\n    const [authMessage, setAuthMessage] = useState('');\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [emailValidation, setEmailValidation] = useState(true);\r\n    const emailRef = useRef('');\r\n    \r\n    const [password, setPassword] = useState('');\r\n    const [passwordValidation, setPasswordValidation] = useState(true);\r\n    const passRef = useRef('');\r\n\r\n\r\n    const login = (email, password) => {\r\n        console.log(email, password);\r\n\r\n        console.log(apis.login);\r\n\r\n        const data = { email, password };\r\n\r\n        fetch(apis.login, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            \r\n            if (data.code >= 200 && data.code <= 299) {\r\n            console.log('Success:', data);\r\n                document.cookie = `email=${data.data.email}`;\r\n                document.cookie = `name=${data.data.name}`;\r\n                document.cookie = `id=${data.data.id}`;\r\n                document.cookie = `token=${data.data.token}`;\r\n                document.cookie = `userRole=${data.data.userRole}`;\r\n\r\n            history.push('./dashboard')\r\n        } else {\r\n            console.log('wrongpass');\r\n            setAuthMessage(data.message);\r\n        }\r\n        })\r\n        .catch((error) => {\r\n            setAuthMessage(error.message);\r\n            console.error('Error:', error);\r\n        });\r\n\r\n    }\r\n\r\n    const validate = () => {\r\n        var emailRegex = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n        console.log('validating ', !emailRegex.test(email));\r\n        if (emailRegex.test(email)) {\r\n           login(email, passRef.current.value);\r\n        } else {\r\n            setEmailValidation(false);\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <div fluid className={styles.centerCard}>\r\n            <div  className={styles.loginCard}>\r\n                <div style={{ fontSize: '22px', paddingBottom: '23px' }}>\r\n                    Login\r\n                </div>\r\n                <Form>\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label className=\"formBg\">Email address</Form.Label>\r\n                        <Form.Control\r\n                          isInvalid={!emailValidation}\r\n                          className=\"formBg\"\r\n                          ref={emailRef}\r\n                          value={email}\r\n                          onChange={e => {\r\n                              setEmailValidation(true);\r\n                              setEmail(e.target.value);\r\n                            }}\r\n                          style={{ maxWidth: '497px', minWidth: '300px' }}\r\n                          type=\"email\"\r\n                          placeholder=\"Enter email\"\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {!emailValidation ? 'Please enter a valid email.' : null}\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                        <div className={styles.password}>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Button variant=\"link\" className=\"formBg\">\r\n                                <Link to=\"/forgotPassword\">Forgot your password?</Link>\r\n                            </Button>\r\n                        </div>\r\n                        <Form.Control\r\n                          ref={passRef}\r\n                          value={password}\r\n                          isInvalid={!passwordValidation || authMessage.length}\r\n                          onChange={e => {\r\n                              setPasswordValidation(true);\r\n                              setAuthMessage('')\r\n                              setPassword(e.target.value)\r\n                            }}\r\n                          style={{ maxWidth: '497px', minWidth: '300px' }}\r\n                          type=\"password\"\r\n                          placeholder=\"Enter your password\"\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {!passwordValidation ? 'Please enter a valid password.' : null}\r\n                            {authMessage}\r\n                            {console.log(authMessage.length, passwordValidation)}\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n            \r\n                </Form>\r\n                    <div className={styles.loginAndJoin}>\r\n                        <Button variant='primary' onClick={validate}>Login</Button>\r\n                        <div className={styles.password} style={{ justifyContent: 'center', paddingTop: '20px' }}>\r\n                            New to MyJobs?\r\n                            <Button variant=\"link\">\r\n                                <Link to=\"/signup\">Create an account</Link>\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Login;","export default __webpack_public_path__ + \"static/media/recruiter.dbf22346.svg\";","import {useState, useRef } from 'react';\r\nimport { Form, Button, Image } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport apis from '../../apis';\r\nimport recruiter from './assets/recruiter.svg';\r\nimport styles from './styles.module.css';\r\n\r\nconst Signup = () => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [isValidName, setValidName] = useState(true);\r\n    const nameRef = useRef('');\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [emailValidation, setEmailValidation] = useState(true);\r\n    const emailRef = useRef('');\r\n    \r\n    const [password, setPassword] = useState('');\r\n    const [isValidPassword, setValidPassword] = useState(true);\r\n    const passRef = useRef('');\r\n    \r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const confirmPassRef = useRef('');\r\n\r\n    const [skills, setSkills] = useState('');\r\n    const skillsRef = useRef('');\r\n\r\n    const [errorResponse, setErrorResponse] = useState('');\r\n    const history = useHistory();\r\n    const renderRole = () => {\r\n        return (\r\n            <div>\r\n                I'm a*\r\n                <div >\r\n                    <Button variant=\"primary\">\r\n                        <Image src={recruiter} style={{ height: '22px' }} />\r\n                        &nbsp;\r\n                        <span style={{ color: '#fff' }}>Recruiter</span>\r\n                    </Button>\r\n                    <Button disabled variant=\"outline-light\" className={styles.candidateSignup}>\r\n                    <i className=\"fa fa-users\" aria-hidden=\"true\" />\r\n                    &nbsp;\r\n                    <span style={{ color: '#000 !important' }}>Candidate</span>\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const renderNameInput = () => {\r\n        return (\r\n            <Form.Group className=\"mb-3\">\r\n            <Form.Label className=\"formBg\">Full Name*</Form.Label>\r\n            <Form.Control\r\n              isInvalid={!isValidName}\r\n              className=\"formBg\"\r\n              ref={nameRef}\r\n              value={name}\r\n              onChange={e => {\r\n                  setErrorResponse('');\r\n                  setValidName(true);\r\n                  setName(e.target.value);\r\n                }}\r\n              style={{ maxWidth: '497px', minWidth: '300px' }}\r\n              type=\"text\"\r\n              placeholder=\"Enter your full name\"\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n                {!isValidName ? 'This field is mandatory.' : null}\r\n            </Form.Control.Feedback>\r\n        </Form.Group>\r\n        );\r\n    }\r\n\r\n    const renderEmailInput = () => {\r\n        return (\r\n            <Form.Group className=\"mb-3\">\r\n            <Form.Label className=\"formBg\">Email address*</Form.Label>\r\n            <Form.Control\r\n              isInvalid={!emailValidation}\r\n              className=\"formBg\"\r\n              ref={emailRef}\r\n              value={email}\r\n              onChange={e => {\r\n                  setErrorResponse('');\r\n                  setEmailValidation(true);\r\n                  setEmail(e.target.value);\r\n                }}\r\n              style={{ maxWidth: '497px', minWidth: '300px' }}\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n                {!emailValidation ? 'Invalid email address.' : null}\r\n            </Form.Control.Feedback>\r\n        </Form.Group>\r\n        );\r\n    }\r\n\r\n    const renderPasswordInput = (passRef, password, isValidPassword, setPassword) => {\r\n        return(\r\n            <Form.Group className=\"mb-3\" >\r\n                <div className={styles.password}>\r\n                    <Form.Label>Password*</Form.Label>\r\n                </div>\r\n                <Form.Control\r\n                    ref={passRef}\r\n                    value={password}\r\n                    isInvalid={!isValidPassword}\r\n                    onChange={e => {\r\n                        setErrorResponse('');\r\n                        setValidPassword(true);\r\n                        setPassword(e.target.value)}\r\n                    }\r\n                    style={{ maxWidth: '238px' }}\r\n                    type=\"password\"\r\n                    placeholder=\"Enter your password\"\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                    {!isValidPassword ? 'Passwords don\\'t match' : null}\r\n                </Form.Control.Feedback>\r\n            </Form.Group>\r\n        );\r\n    }\r\n\r\n    const renderSkillsInput = () => {\r\n        return (\r\n            <Form.Group className=\"mb-3\">\r\n            <Form.Label className=\"formBg\">Skills</Form.Label>\r\n            <Form.Control\r\n              className=\"formBg\"\r\n              ref={skillsRef}\r\n              value={skills}\r\n              onChange={e => setSkills(e.target.value)}\r\n              style={{ maxWidth: '497px', minWidth: '300px' }}\r\n              type=\"text\"\r\n              placeholder=\"Enter comma separated skills\"\r\n            />\r\n        </Form.Group>\r\n        );\r\n    }\r\n\r\n    const isValidForm = () => {\r\n        var emailRegex = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n        if (emailRegex.test(email)) {\r\n           setEmailValidation(true);\r\n        } else {\r\n            setEmailValidation(false);\r\n        }\r\n        setValidName(nameRef.current.value.length ? true : false)\r\n        setValidPassword(passRef.current.value === confirmPassRef.current.value)\r\n        return (emailValidation && isValidName && isValidPassword);\r\n    }\r\n\r\n    const signUp = () => {\r\n\r\n        if (isValidForm()) {\r\n            const data={name, email, userRole: 0, password, confirmPassword, skills};\r\n            fetch(apis.register, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n                })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.code >= 200 && data.code <= 299) {\r\n                    console.log('Success:', data);\r\n                    history.push('./login');\r\n                } else {\r\n\r\n                    console.log(data);\r\n                    let errorMessage = ' ';\r\n                    data.errors?.forEach((eachError) => {\r\n                        return(errorMessage += '\\n' + eachError.name);\r\n                    });\r\n                    console.log(data);\r\n                    if (data.message) errorMessage+=data.message;\r\n                    setErrorResponse(errorMessage);\r\n                }\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error:', error);\r\n                });\r\n        }\r\n    }\r\n    return ( \r\n        <div className={styles.centerCard}>\r\n            <div className={styles.signupCard}>\r\n                <div style={{ fontSize: '22px', paddingBottom: '23px' }}>\r\n                    Signup\r\n                </div>\r\n                <Form>\r\n                    {renderRole()}\r\n                    {renderNameInput()}\r\n                    {renderEmailInput()}\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between'}}>\r\n                        {renderPasswordInput(passRef, password, isValidPassword, setPassword)}\r\n                        <div style={{ marginLeft: '21px' }}>\r\n                            {renderPasswordInput(confirmPassRef, confirmPassword, isValidPassword, setConfirmPassword)}\r\n                        </div>\r\n                    </div>\r\n                    {renderSkillsInput()}\r\n\r\n                    \r\n                    {console.log(errorResponse)}\r\n                    <div className={styles.signupAndLogin}>\r\n                        <div style={{ color: 'red'}}>{errorResponse}</div>\r\n                        <Button onClick={signUp} variant='primary'>Signup</Button>\r\n                        <div style={{ paddingTop: '40px'}}>\r\n                            Have an account?\r\n                            <Link to=\"/login\">Login</Link>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        </div> \r\n    );\r\n}\r\n \r\nexport default Signup;","import styles from './styles.module.css';\r\nimport React, { useState, useRef, useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst ForgotPassword = () => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [emailValidation, setEmailValidation] = useState(false);\r\n    const emailRef = useRef('');\r\n    const history = useHistory();\r\n\r\n    const validateEmail = (email) => {\r\n        var emailRegex = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n        setEmailValidation(!emailRegex.test(email));\r\n        return emailRegex.test(email)\r\n    }\r\n\r\n    const resetPassword = () => {\r\n        if (validateEmail(emailRef.current.value)) history.push(`./resetPassword?email=${emailRef.current.value}&token=sdkfjsdkjfjsdkfjsdfjkri`);\r\n    }\r\n\r\n    const renderEmailInput = () => {\r\n        return (\r\n            <Form.Group className=\"mb-3\">\r\n            <Form.Label className=\"formBg\">Email address</Form.Label>\r\n            <Form.Control\r\n              isInvalid={emailValidation }\r\n              className=\"formBg\"\r\n              ref={emailRef}\r\n              value={email}\r\n              onChange={e => setEmail(e.target.value)}\r\n              style={{ maxWidth: '497px', minWidth: '300px' }}\r\n              type=\"email\"\r\n              placeholder=\"Enter your email\"\r\n            />\r\n             <Form.Control.Feedback type=\"invalid\">\r\n                {emailValidation ? 'Please enter a valid email.' : null}\r\n            </Form.Control.Feedback>\r\n        </Form.Group>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div class={styles.centerCard}>\r\n            <div className={styles.forgotPassCard}>\r\n                <div className=\"cardTitle\">Forgot Password</div>\r\n                <div style={{ paddingBottom: '20px' }}>\r\n                    Enter the email associated with your account and we’ll send you instructions to reset your password.\r\n                </div>\r\n                {renderEmailInput()}\r\n                <div className={styles.submitButton}>\r\n                    <Button onClick={resetPassword} variant='primary' style={{ padding: '6px 35px' }}>Submit</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default ForgotPassword;","import React from 'react';\r\nimport {useState, useRef } from 'react';\r\nimport styles from './styles.module.css';\r\nimport { useLocation  } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\n\r\nconst ResetPassword = () => {    \r\n\r\n    const { search } = useLocation();\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [isValidPassword, setValidPassword] = useState(true);\r\n    const passRef = useRef('');\r\n    \r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [isValidConfirmPassword, setValidConfirmPassword] = useState(true);\r\n    const confirmPassRef = useRef('');\r\n\r\n    console.log(search);\r\n    const query = new URLSearchParams(search);\r\n    const email = query.get('email');\r\n    const resetToken = query.get('token');\r\n    console.log('email ', email, 'token ', resetToken);\r\n\r\n\r\n\r\n    const renderPasswordInput = (passRef, password, isValidPassword, setPassword) => {\r\n        return(\r\n            <Form.Group className=\"mb-3\" >\r\n                <div className={styles.password}>\r\n                    <Form.Label>Password</Form.Label>\r\n                </div>\r\n                <Form.Control\r\n                    ref={passRef}\r\n                    value={password}\r\n                    isInvalid={!isValidPassword}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                    style={{ maxWidth: '238px' }}\r\n                    type=\"password\"\r\n                    placeholder=\"Enter your password\"\r\n                />\r\n            </Form.Group>\r\n        );\r\n    }\r\n\r\n    console.log(\"restpasss\");\r\n    return (\r\n        <div class={styles.centerCard}>\r\n            <div className={styles.resetCard}>\r\n                <div className=\"cardTitle\">Reset Your Password</div>\r\n                <div style={{ paddingBottom: '20px' }}>Enter your new password below.</div>\r\n                {renderPasswordInput(passRef, password, isValidPassword, setPassword)}\r\n                {renderPasswordInput(confirmPassRef, confirmPassword, isValidConfirmPassword, setConfirmPassword)}\r\n                <Button variant='primary'>Reset</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default ResetPassword;","import { Button } from 'react-bootstrap';\r\nimport React, { useState } from 'react';\r\nimport ViewApplicants from '../../Containers/RecruiterFlow/ViewApplicants'\r\nimport styles from './styles.module.css';\r\n\r\n// const LocationAndApplicants = (description) => {\r\n//     // const [showApplications, setShowApplications] = useState(false); \r\n//     return(\r\n       \r\n//     );\r\n// }\r\n\r\nconst Jobpost = (jobDescription, setViewApplications) => {\r\n    // const [showApplications, setShowApplications] = useState(false); \r\n    return ( \r\n        <div key={`job${jobDescription.id}`} className={styles['jobpost']}>\r\n            <div style={{ fontSize: '17px' }}>{jobDescription.title}</div>\r\n            <div style={{ fontSize: '14px' }}>{jobDescription.description}</div>\r\n\r\n\r\n            <div key={jobDescription.id} className={styles.locationAndApplicants}>\r\n            <div>\r\n                <i className=\"fa fa-map-marker\" />\r\n                {jobDescription.location}\r\n            </div>\r\n            <Button onClick={() => setViewApplications(jobDescription.id)} className={styles.blueBg}>\r\n                View Applications\r\n            </Button>\r\n            \r\n        </div>\r\n           \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Jobpost;","export default __webpack_public_path__ + \"static/media/blank.d0d1d813.svg\";","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport apis from '../../../apis';\r\nimport { cookieObject } from './../../../App';\r\nimport { Button, Image, Modal, Breadcrumb } from 'react-bootstrap';\r\nimport Jobpost from '../../../Components/Jobpost';\r\nimport ViewApplicants from '../ViewApplicants';\r\nimport blank from './assets/blank.svg';\r\nimport styles from './styles.module.css';\r\n\r\n// console.log((document.cookie));\r\n\r\n\r\nconst Dashboard = () => {\r\n\r\n    const [applications, setApplications] = useState([]);\r\n    const [jobModalId, setJobModalId] = useState([]);\r\n    const [viewApplcations, setViewApplcations] = useState(false);\r\n\r\n    const [postedJobs, setPostedJobs] = useState([]);\r\n    \r\n     \r\n    console.log('cookies ', cookieObject);\r\n\r\n    useEffect(() => {\r\n        fetch(`${apis.getSingleJobDetails}/${jobModalId}/candidates`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': cookieObject.token,\r\n            },\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.code >= 200 && data.code <= 299) {\r\n                console.log('applicants ', data);\r\n                // setApplications(data.data.data);\r\n                return data;\r\n                // history.push('./dashboard')\r\n            } else {\r\n                console.log('wrongpass');\r\n                console.log(data.message);\r\n            }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.message);\r\n                console.error('Error:', error);\r\n            });\r\n\r\n    }, [jobModalId]);\r\n\r\n    useEffect(() => {\r\n        fetchJobsFromRecruiter(cookieObject.token)\r\n    }, []);\r\n\r\n    const fetchJobsFromRecruiter = (token) => {\r\n        fetch(apis.fetchAllPostedJobs, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': cookieObject.token,\r\n            },\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.code >= 200 && data.code <= 299) {\r\n                console.log('Jobs posted ', data.data.data);\r\n                setPostedJobs(data.data.data);\r\n                return data;\r\n                // history.push('./dashboard')\r\n            } else {\r\n                console.log('wrongpass');\r\n                console.log(data.message);\r\n            }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.message);\r\n                console.error('Error:', error);\r\n            });\r\n    }\r\n\r\n    const showApplicants = () => {\r\n\r\n        return (\r\n            <div>\r\n            <Modal show={viewApplcations} onHide={() => setViewApplcations(false)} aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Using Grid in Modal\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"show-grid\">\r\n                    <div>\r\n                        content\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n        );\r\n    }\r\n\r\n    function openModal (jobId) {\r\n        console.log('ds');\r\n        setJobModalId(jobId);\r\n        setViewApplcations(true);\r\n    }\r\n\r\n    const renderBreadcrumb = () => {\r\n        return (\r\n            <Breadcrumb>\r\n                <Breadcrumb.Item>\r\n                    <Link to='/dashboard'><i className=\"fa fa-home\" aria-hidden=\"true\" />&nbsp;Home</Link>\r\n                </Breadcrumb.Item>\r\n                \r\n            </Breadcrumb>\r\n        );       \r\n    }\r\n    if (postedJobs.length) {\r\n        \r\n        return (\r\n            <div>\r\n                <div className={styles.recruiterDashboard}>\r\n                {renderBreadcrumb()}\r\n                    <div style={{ fontSize: '22px', paddingBottom:'20px' }} className=\"whiteText\">\r\n                        Jobs posted by you\r\n                    </div>\r\n                </div>\r\n                <div className={styles.jobCards}>\r\n                    {postedJobs.map((jobpost) => {\r\n                        return Jobpost(jobpost, (id) => openModal(id))\r\n                    })}\r\n                </div>\r\n\r\n                \r\n            </div>\r\n        );\r\n    } else {\r\n        return ( \r\n            <div>\r\n                {renderBreadcrumb()}\r\n                <div className={styles.recruiterDashboard}>\r\n                    <div style={{ fontSize: '22px' }} className=\"whiteText\">\r\n                        Jobs posted by you\r\n                    </div>\r\n                </div>\r\n                <div className={styles.noJobsPosted}>\r\n                    <Image style={{ maxHeight: '106px' }} src={blank}></Image>\r\n                        <div style={{ paddingBottom: '20px' }}>\r\n                        Your posted jobs will show here!\r\n                        </div>\r\n                        <Link to='/createJobpost'>\r\n                            <Button>Post a Job</Button>\r\n                        </Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Dashboard;","import { useState, useRef } from 'react';\r\nimport { Form, Button  } from 'react-bootstrap';\r\nimport apis from '../../../apis';\r\nimport { cookieObject } from '../../../App';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styles from './styles.module.css';\r\n\r\n\r\nconst CreateJobpost = () => {\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [isValidTitle, setValidTitle] = useState(true);\r\n    const titleRef = useRef('');\r\n    \r\n    const [description, setDescription] = useState('');\r\n    const [isValidDescription, setValidDescription] = useState(true);\r\n    const descriptionRef = useRef('');\r\n    \r\n    const [location, setLocation] = useState('');\r\n    const [isValidLocation, setValidLocation] = useState(true);\r\n    const locationRef = useRef('');\r\n\r\n    const history = useHistory();\r\n\r\n    const rendeTitleInput = () => {\r\n        return (\r\n            <Form.Group className=\"mb-3\">\r\n            <Form.Label className=\"formBg\">Job Title</Form.Label>\r\n            <Form.Control\r\n              isInvalid={!isValidTitle}\r\n              className=\"formBg\"\r\n              ref={titleRef}\r\n              value={title}\r\n              onChange={e => setTitle(e.target.value)}\r\n              style={{ maxWidth: '497px', minWidth: '300px' }}\r\n              type=\"text\"\r\n              placeholder=\"Enter job title\"\r\n            />\r\n        </Form.Group>\r\n        );\r\n    }\r\n\r\n    const renderDescriptionInput = () => {\r\n        return (\r\n            <Form.Group className=\"mb-3\">\r\n            <Form.Label className=\"formBg\">Description</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              isInvalid={!isValidDescription}\r\n              className=\"formBg\"\r\n              ref={descriptionRef}\r\n              value={description}\r\n              onChange={e => setDescription(e.target.value)}\r\n              style={{ maxWidth: '497px', minWidth: '300px', minHeight: '100px' }}\r\n              type=\"text\"\r\n              placeholder=\"Enter job description\"\r\n            />\r\n        </Form.Group>\r\n        );\r\n    }\r\n\r\n    const rendeLocationInput = () => {\r\n        return (\r\n            <Form.Group className=\"mb-3\">\r\n            <Form.Label className=\"formBg\">Enter Location</Form.Label>\r\n            <Form.Control\r\n              isInvalid={!isValidLocation}\r\n              className=\"formBg\"\r\n              ref={locationRef}\r\n              value={location}\r\n              onChange={e => setLocation(e.target.value)}\r\n              style={{ maxWidth: '497px', minWidth: '300px' }}\r\n              type=\"text\"\r\n              placeholder=\"Enter location\"\r\n            />\r\n        </Form.Group>\r\n        );\r\n    }\r\n\r\n    const validateFields = () => {\r\n        return (titleRef.current.value.length && descriptionRef.current.value.length && locationRef.current.value.length);\r\n    }\r\n\r\n    const postJob = () => {\r\n        if (validateFields) {\r\n\r\n            const data = {title, description, location };\r\n            fetch(apis.createJobpost, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': cookieObject.token,\r\n                },\r\n                body: JSON.stringify(data),\r\n                })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    \r\n                    if (data.code >= 200 && data.code <= 299) {\r\n                    console.log('Job posted successfully');\r\n                    history.push('./dashboard')\r\n                } else {\r\n                    console.log('wrongpass');\r\n                    console.log(data.message);\r\n                }\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error.message);\r\n                    console.error('Error:', error);\r\n                });\r\n        \r\n        }\r\n    }\r\n\r\n    return ( \r\n        <div className={styles.jobpostCard}>\r\n            <div className=\"cardTitle\">\r\n                Post a Job\r\n            </div>\r\n\r\n            {rendeTitleInput()}\r\n            {renderDescriptionInput()}\r\n            {rendeLocationInput()}\r\n\r\n                <Button onClick={() => {postJob()}}>\r\n                    Post\r\n                </Button>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default CreateJobpost;","import LandingPage from './../LandingPage';\r\nimport Login from './../Login';\r\nimport Signup from '../Signup';\r\nimport ForgotPassword from '../ForgotPassword'\r\nimport ResetPassword from '../ResetPassword';\r\nimport RecruiterDashboard from '../RecruiterFlow/Dashboard';\r\nimport CreateJobpost from '../RecruiterFlow/CreateJobpost';\r\nimport NavBar from '../../Components/Navbar';\r\nimport styles from './styles.module.css'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n    return ( \r\n        <div className={`${styles.splitBg}`}>\r\n        <Router>\r\n        {NavBar()}\r\n            <Switch>\r\n                <Route path=\"/\" exact component={LandingPage} />\r\n                <Route path=\"/login\" component={Login} />\r\n                <Route path=\"/signup\" component={Signup} />\r\n                <Route path=\"/forgotpassword\" component={ForgotPassword} />\r\n                <Route path=\"/resetPassword\" component={ResetPassword} />\r\n\r\n                <Route path=\"/dashboard\" component={RecruiterDashboard} />\r\n                <Route path=\"/createJobpost\" component={CreateJobpost} />\r\n            </Switch>\r\n        </Router>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Home;","import { createContext, useEffect, useState } from 'react';\nimport './App.css';\nimport Home from './Containers/Home';\n\nconst getCookieObject = () => {\n  const cook = document.cookie;\n  const cookArray = cook.split(\";\");\n  let cookObj = {};\n  let temp=[];\n  cookArray.forEach((eachPair)=> {\n    temp=eachPair.split('=');\n    cookObj = {...cookObj, [temp[0].trim()]: temp[1]}\n  })\n  console.log(cookObj);\n  return cookObj;\n}\n\nexport const cookieObject = getCookieObject();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './styles.scss';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}